apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "web.servers.org/v1alpha1",
          "kind": "WebServer",
          "metadata": {
            "name": "webserver-example"
          },
          "spec": {
            "applicationName": "webapp",
            "replicas": 1,
            "useInsightsClient": false
          }
        }
      ]
    capabilities: Seamless Upgrades
  name: jws-operator.v0.0.2
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Web Server is the schema for the webservers API
      displayName: Web Server
      kind: WebServer
      name: webservers.web.servers.org
      specDescriptors:
      - description: The base for the names of the deployed application resources
        displayName: Application Name
        path: applicationName
      - description: If true operator will log tomcat's catalina logs
        displayName: Catalina Logs
        path: persistentLogs.catalinaLogs
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: TLSSecret secret containing server.cert the server certificate,
          server.key the server key and optional ca.cert the CA cert of the client
          certificates
        displayName: TLS Secret
        path: tlsConfig.tlsSecret
      - description: Names of persistent volume claims which will be mounted to /volumes
        displayName: Persistent Volume Claims
        path: volumeSpec.persistentVolumeClaims
      - description: The name of the application image to be deployed
        displayName: Application Image
        path: webImage.applicationImage
      - description: Image of the container where the web application will be built
        displayName: Image
        path: webImage.webApp.builder.image
      - description: 'Name of the web application (default: ROOT.war)'
        displayName: Name
        path: webImage.webApp.name
      - description: String for the pod readiness health check logic
        displayName: Server Readiness Script
        path: webImage.webServerHealthCheck.serverReadinessScript
      - description: The imagestream containing the image to be deployed
        displayName: Image Stream Name
        path: webImageStream.imageStreamName
      - description: String for the pod readiness health check logic
        displayName: Server Readiness Script
        path: webImageStream.webServerHealthCheck.serverReadinessScript
      - description: URL for the repository of the application sources
        displayName: Source Repository URL
        path: webImageStream.webSources.sourceRepositoryUrl
      - description: URL to a maven repository
        displayName: Maven Mirror URL
        path: webImageStream.webSources.webSourcesParams.mavenMirrorUrl
      - description: Secret for generic webhook
        displayName: Generic
        path: webImageStream.webSources.webhookSecrets.generic
      - description: If true operator will log tomcat's access logs
        displayName: Access Logs
        path: persistentLogs.enableAccessLogs
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: The desired number of replicas for the application
        displayName: Replicas
        path: replicas
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: TLSPassword passphrase for the key in the client.key
        displayName: TLS Password
        path: tlsConfig.tlsPassword
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:password
      - description: Names of secrets which will be mounted to /secrets
        displayName: Secrets
        path: volumeSpec.secrets
      - description: secret to pull from the docker repository
        displayName: Image Pull Secret
        path: webImage.imagePullSecret
      - description: The script that the BuilderImage will use to build the application
          war and move it to /mnt
        displayName: Application Build Script
        path: webImage.webApp.builder.applicationBuildScript
      - description: URL for the repository of the application sources
        displayName: Source Repository URL
        path: webImage.webApp.sourceRepositoryURL
      - description: String for the pod liveness health check logic
        displayName: Server Liveness Script
        path: webImage.webServerHealthCheck.serverLivenessScript
      - description: The namespace where the image stream is located
        displayName: Image Stream Namespace
        path: webImageStream.imageStreamNamespace
      - description: String for the pod liveness health check logic
        displayName: Server Liveness Script
        path: webImageStream.webServerHealthCheck.serverLivenessScript
      - description: Branch in the source repository
        displayName: Source Repository Reference
        path: webImageStream.webSources.sourceRepositoryRef
      - description: Directory where the jar/war is created
        displayName: Artifact Directory
        path: webImageStream.webSources.webSourcesParams.artifactDir
      - description: Secret for Github webhook
        displayName: Github
        path: webImageStream.webSources.webhookSecrets.github
      - description: VolumeName is the name of pv we eant to bound
        displayName: Volume Name
        path: persistentLogs.volumeName
      - description: 'certificateVerification for tomcat configuration: required/optional
          or empty.'
        displayName: Certificate Verification
        path: tlsConfig.certificateVerification
      - description: Use session clustering
        displayName: Enable Session Clustering in Tomcat
        path: useSessionClustering
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Names of config maps which will be mounted to /configmaps
        displayName: Config Maps
        path: volumeSpec.configMaps
      - description: The source code for a webapp to be built and deployed
        displayName: Web App
        path: webImage.webApp
      - description: Branch in the source repository
        displayName: Source Repository Reference
        path: webImage.webApp.sourceRepositoryRef
      - description: (Optional) Source code information
        displayName: Web Sources
        path: webImageStream.webSources
      - description: Subdirectory in the source repository
        displayName: Context Directory
        path: webImageStream.webSources.contextDir
      - description: (Deprecated - Use WebhookSecrets instead) Secret string for a
          generic web hook
        displayName: Generic Webhook Secret
        path: webImageStream.webSources.webSourcesParams.genericWebhookSecret
      - description: Secret for Gitlab webhook
        displayName: Gitlab
        path: webImageStream.webSources.webhookSecrets.gitlab
      - description: StorageClass name of the storage class we want to use for the
          bound
        displayName: Storage Class
        path: persistentLogs.storageClass
      - description: Route behaviour:[tls]hostname/NONE or empty.
        displayName: Route Hostname
        path: tlsConfig.routeHostname
      - description: Use Insights client (works only with JWS 6.1+ images)
        displayName: Enable Red Hat Insights
        path: useInsightsClient
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Volume Claim Template for stateful applications
        displayName: Volume Claim Templates
        path: volumeSpec.volumeClaimTemplates
      - description: Subdirectory in the source repository
        displayName: Source Repository Context Directory
        path: webImage.webApp.contextDir
      - description: Pod health checks information
        displayName: Web Server Health Check
        path: webImage.webServerHealthCheck
      - description: Pod health checks information
        displayName: Web Server Health Check
        path: webImageStream.webServerHealthCheck
      - description: (Optional) Sources related parameters
        displayName: Web Sources Parameters
        path: webImageStream.webSources.webSourcesParams
      - description: (Deprecated - Use WebhookSecrets instead) Secret string for a
          Github web hook
        displayName: Github Webhook Secret
        path: webImageStream.webSources.webSourcesParams.githubWebhookSecret
      - description: (Deployment method 1) Application image
        displayName: Web Image
        path: webImage
      - description: Docker repository to push the built image
        displayName: Web Application War Image
        path: webImage.webApp.webAppWarImage
      - description: Webhook secrets configuration
        displayName: Webhook Secrets
        path: webImageStream.webSources.webhookSecrets
      - description: secret to push to the docker repository
        displayName: Web Application War Image Push Secret
        path: webImage.webApp.webAppWarImagePushSecret
      - description: (Deployment method 2) Imagestream
        displayName: Web Image Stream
        path: webImageStream
      - description: TLS configuration for the WebServer
        displayName: TLS Configuration
        path: tlsConfig
      - description: The information required to build the application
        displayName: Builder
        path: webImage.webApp.builder
      - description: Environment variables for the WebServer
        displayName: Environment Variables
        path: environmentVariables
      - description: Persistent logs configuration
        displayName: Persistent Logs
        path: persistentLogs
      - description: Configuration of the resources used by the WebServer, e.g. CPU
          and memory
        displayName: Pod Resources
        path: podResources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: Security context defines the security capabilities required to
          run the application
        displayName: Security Context
        path: securityContext
      - description: Specifications of volumes which will be mounted
        displayName: Volume Specifications
        path: volumeSpec
      version: v1alpha1
  description: WebServer operator can manage JBoss Web Server images.
  displayName: WebServer
  icon:
  - base64data: PHN2ZyB3aWR0aD0iMjU2IiBoZWlnaHQ9IjI1NiIgdmlld0JveD0iMCAwIDI1NiAyNTYiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CjxyZWN0IHdpZHRoPSIyNTYiIGhlaWdodD0iMjU2IiBmaWxsPSJ3aGl0ZSIvPgo8dGV4dCB4PSI1MCUiIHk9IjYwJSIgZm9udC1mYW1pbHk9IkFyaWFsLCBzYW5zLXNlcmlmIiBmb250LXNpemU9IjEwMCIgZm9udC13ZWlnaHQ9ImJvbGQiIGZpbGw9IiMyRTNCNEUiIHRleHQtYW5jaG9yPSJtaWRkbGUiIGFsaWdubWVudC1iYXNlbGluZT0ibWlkZGxlIj5KV1M8L3RleHQ+Cjwvc3ZnPgo=
    mediatype: image/svg+xml
  install:
    spec:
      deployments: null
    strategy: ""
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: true
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - WebServer
  - JBoss
  links:
  - name: Jws Operator
    url: https://jws-operator.domain
  maturity: alpha
  minKubeVersion: 1.25.0
  provider:
    name: WebServer community
  version: 0.0.2
